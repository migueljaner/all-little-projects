package jpanelimagen;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import javax.swing.JFileChooser;

public class JPanelImagenPanel extends javax.swing.JPanel {

    private File[] imagenes;
    private ArrayList<byte[]> byteImg;

    public JPanelImagenPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_imagen = new javax.swing.JLabel();
        btn_imagen = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        area_Imagen = new javax.swing.JTextArea();

        lbl_imagen.setText("Imagen:");

        btn_imagen.setText("...");
        btn_imagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_imagenActionPerformed(evt);
            }
        });

        area_Imagen.setColumns(20);
        area_Imagen.setRows(5);
        jScrollPane1.setViewportView(area_Imagen);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_imagen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_imagen)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_imagen)
                    .addComponent(btn_imagen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_imagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_imagenActionPerformed

        JFileChooser fc = new JFileChooser();

        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (!fc.isMultiSelectionEnabled()) {
            fc.setMultiSelectionEnabled(true);
        }

        int result = fc.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            imagenes = fc.getSelectedFiles();
            for (int i = 0; i < imagenes.length; i++) {
                area_Imagen.append(imagenes[i].getName() + "\n");
            }
        }
    }//GEN-LAST:event_btn_imagenActionPerformed

    public ArrayList<byte[]> getImagenes() {
        Imagenes imageFiles = new Imagenes(imagenes);
        System.out.println(imageFiles);

        if (imageFiles != null && imageFiles.imagenes != null) {
            if (imageFiles.imagenes.length != 0) {
                File[] imageFiles2 = imageFiles.getImagen();

                ArrayList<byte[]> imagesList = new ArrayList<>();

                for (File file : imageFiles2) {
                    try {
                        byte[] fileBytes = Files.readAllBytes(file.toPath());
                        imagesList.add(fileBytes);
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
                this.byteImg = imagesList;
            }
        }

        return this.byteImg;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area_Imagen;
    private javax.swing.JButton btn_imagen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_imagen;
    // End of variables declaration//GEN-END:variables
}

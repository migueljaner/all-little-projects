/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import dataacces.DataAccess;
import dto.Allotjament;
import dto.Municipi;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

/**
 *
 * @author Miquel
 */
public class pnlAnadirAlojamiento extends javax.swing.JPanel {

    private PnlLoged padre;
    private DataAccess data = new DataAccess();

    /**
     * Creates new form AnadirAlojamiento
     */
    public pnlAnadirAlojamiento(PnlLoged padre) {
        this.padre = padre;
        initComponents();

        ArrayList<Municipi> municipis = data.getMunicipis();
        DefaultComboBoxModel<Municipi> dfcm = new javax.swing.DefaultComboBoxModel<>();
        for (Municipi municipi : municipis) {
            dfcm.addElement(municipi);
        };
        cmbMunicipio = new JComboBox<Municipi>(dfcm);
        cmbMunicipio.setBounds(310, 330, 330, 22);
        add(cmbMunicipio);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblInputError = new javax.swing.JLabel();
        lblAddPrecio = new javax.swing.JLabel();
        lblAddDescripcion = new javax.swing.JLabel();
        lblAddDirección = new javax.swing.JLabel();
        lblAddMunicipì = new javax.swing.JLabel();
        lblAddNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        txtDireccion = new javax.swing.JTextField();
        lblAddServicios = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        spnAddNumPersonas = new javax.swing.JSpinner();
        txtPrecio = new javax.swing.JTextField();
        lblAddAlojamiento1 = new javax.swing.JLabel();
        lblAddNumHuespedes1 = new javax.swing.JLabel();
        chkAddPiscina = new javax.swing.JCheckBox();
        chkAddMascota = new javax.swing.JCheckBox();
        chkAddAA = new javax.swing.JCheckBox();
        chkAddAscensor = new javax.swing.JCheckBox();
        chkAddParking = new javax.swing.JCheckBox();
        chkAddWifi = new javax.swing.JCheckBox();

        setLayout(null);

        lblInputError.setForeground(new java.awt.Color(255, 0, 0));
        add(lblInputError);
        lblInputError.setBounds(310, 90, 260, 20);

        lblAddPrecio.setText("Precio/noche:");
        add(lblAddPrecio);
        lblAddPrecio.setBounds(230, 440, 80, 16);

        lblAddDescripcion.setText("Descripción:");
        add(lblAddDescripcion);
        lblAddDescripcion.setBounds(240, 180, 90, 16);

        lblAddDirección.setText("Dirección:");
        add(lblAddDirección);
        lblAddDirección.setBounds(250, 280, 60, 16);

        lblAddMunicipì.setText("Municipio:");
        add(lblAddMunicipì);
        lblAddMunicipì.setBounds(250, 330, 60, 16);

        lblAddNombre.setText("Nombre:");
        add(lblAddNombre);
        lblAddNombre.setBounds(250, 140, 50, 16);
        add(txtNombre);
        txtNombre.setBounds(310, 140, 330, 22);

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);

        add(jScrollPane1);
        jScrollPane1.setBounds(310, 180, 330, 86);
        add(txtDireccion);
        txtDireccion.setBounds(310, 280, 330, 22);

        lblAddServicios.setText("Servicios:");
        add(lblAddServicios);
        lblAddServicios.setBounds(400, 390, 60, 16);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        add(btnCancelar);
        btnCancelar.setBounds(580, 490, 90, 23);

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        add(btnAceptar);
        btnAceptar.setBounds(680, 490, 72, 23);

        spnAddNumPersonas.setModel(new javax.swing.SpinnerNumberModel(1, 1, 15, 1));
        add(spnAddNumPersonas);
        spnAddNumPersonas.setBounds(310, 390, 70, 22);
        add(txtPrecio);
        txtPrecio.setBounds(310, 440, 71, 22);

        lblAddAlojamiento1.setText("Añadir Alojamiento...");
        add(lblAddAlojamiento1);
        lblAddAlojamiento1.setBounds(50, 80, 130, 16);

        lblAddNumHuespedes1.setText("Numero huespedes:");
        add(lblAddNumHuespedes1);
        lblAddNumHuespedes1.setBounds(200, 390, 120, 16);

        chkAddPiscina.setText("Piscina");
        add(chkAddPiscina);
        chkAddPiscina.setBounds(460, 390, 60, 20);

        chkAddMascota.setText("Mascotas");
        add(chkAddMascota);
        chkAddMascota.setBounds(560, 390, 73, 20);

        chkAddAA.setText("A/A");
        add(chkAddAA);
        chkAddAA.setBounds(460, 420, 44, 20);

        chkAddAscensor.setText("Ascensor");
        add(chkAddAscensor);
        chkAddAscensor.setBounds(560, 420, 71, 20);

        chkAddParking.setText("Parking");
        add(chkAddParking);
        chkAddParking.setBounds(460, 450, 63, 20);

        chkAddWifi.setText("Wifi");
        add(chkAddWifi);
        chkAddWifi.setBounds(560, 450, 44, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        padre.setVisible(true);
        padre.getPadre().remove(this);
        padre.repaint();

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        //Si las areas de texto no estan en blanco, añadimos el alojamiento a la base de datos.
        if (!txtNombre.getText().isBlank() && !txtDescripcion.getText().isBlank() && !txtDireccion.getText().isBlank() && txtPrecio.getText().matches("^[0-9]+\\.?[0-9]*$")) {
            String nuevoNombre = txtNombre.getText();
            String nuevaDesc = txtDescripcion.getText();
            String nuevaDireccion = txtDireccion.getText();
            Float nuevoPrecio = Float.parseFloat(txtPrecio.getText());
            Integer nuevoMunicipi = cmbMunicipio.getSelectedIndex() + 1;
            Integer nuevoNumPersonas = (Integer) spnAddNumPersonas.getValue();
            
            //Instanciamos nuevo alojamiento con los datos obtenidos.
            Allotjament nuevoAlojamiento = new Allotjament();
            nuevoAlojamiento.setNom(nuevoNombre);
            nuevoAlojamiento.setDescripcio(nuevaDesc);
            nuevoAlojamiento.setAdresa(nuevaDireccion);
            nuevoAlojamiento.setPreu_per_nit(nuevoPrecio);
            nuevoAlojamiento.setId_Municipi(nuevoMunicipi);
            nuevoAlojamiento.setNum_persones(nuevoNumPersonas);
            nuevoAlojamiento.setId_Propietari(padre.getPadre().getUserLogged().getId());
           
            //Comprobamos y añadimos los servicios seleccionados al alojamiento.
            int result;
            if ((result = data.insertAllotjament(nuevoAlojamiento)) > 0) {
                
                if (chkAddWifi.isSelected()) {
                    data.insertServei(6, result);
                }
                if (chkAddPiscina.isSelected()) {
                    data.insertServei(1, result);
                }
                if (chkAddParking.isSelected()) {
                    data.insertServei(5, result);
                }
                if (chkAddMascota.isSelected()) {
                    data.insertServei(2, result);
                }
                if (chkAddAscensor.isSelected()) {
                    data.insertServei(4, result);
                }
                if (chkAddAA.isSelected()) {
                    data.insertServei(3, result);
                }
                this.setVisible(false);
                padre.setVisible(true);
                padre.cargarAlojamientos();
            }
        } else {
            lblInputError.setText("Introduce los campos correctamente...");
        }
    }//GEN-LAST:event_btnAceptarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JCheckBox chkAddAA;
    private javax.swing.JCheckBox chkAddAscensor;
    private javax.swing.JCheckBox chkAddMascota;
    private javax.swing.JCheckBox chkAddParking;
    private javax.swing.JCheckBox chkAddPiscina;
    private javax.swing.JCheckBox chkAddWifi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddAlojamiento1;
    private javax.swing.JLabel lblAddDescripcion;
    private javax.swing.JLabel lblAddDirección;
    private javax.swing.JLabel lblAddMunicipì;
    private javax.swing.JLabel lblAddNombre;
    private javax.swing.JLabel lblAddNumHuespedes1;
    private javax.swing.JLabel lblAddPrecio;
    private javax.swing.JLabel lblAddServicios;
    private javax.swing.JLabel lblInputError;
    private javax.swing.JSpinner spnAddNumPersonas;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JComboBox<Municipi> cmbMunicipio;
}
